<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- 加载db.properties -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 会创建出sqlSeesionFactory -->
	<bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- mybatis的全局配置文件  也可以用property标签来配置-->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property>
	</bean>


	<!-- 整合包下提供的标签，Mapper的扫描器 -->
	<!--  
		<mybatis-spring:scan base-package="cn.jld.mapper"/> 
	-->
	<!-- mapper的扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包的根路径 -->
		<property name="basePackage" value="cn.jld.mapper"></property>
		<!--  -->
		<property name="sqlSessionFactoryBeanName" value="sqlsessionfactory"></property>
	</bean>


</beans>


